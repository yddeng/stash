// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs/proto/message/equipDecompose.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EquipDecomposeToS struct {
	EquipID              []uint32 `protobuf:"varint,1,rep,name=equipID" json:"equipID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EquipDecomposeToS) Reset()         { *m = EquipDecomposeToS{} }
func (m *EquipDecomposeToS) String() string { return proto.CompactTextString(m) }
func (*EquipDecomposeToS) ProtoMessage()    {}
func (*EquipDecomposeToS) Descriptor() ([]byte, []int) {
	return fileDescriptor_9214965f60b82adc, []int{0}
}

func (m *EquipDecomposeToS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipDecomposeToS.Unmarshal(m, b)
}
func (m *EquipDecomposeToS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipDecomposeToS.Marshal(b, m, deterministic)
}
func (m *EquipDecomposeToS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipDecomposeToS.Merge(m, src)
}
func (m *EquipDecomposeToS) XXX_Size() int {
	return xxx_messageInfo_EquipDecomposeToS.Size(m)
}
func (m *EquipDecomposeToS) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipDecomposeToS.DiscardUnknown(m)
}

var xxx_messageInfo_EquipDecomposeToS proto.InternalMessageInfo

func (m *EquipDecomposeToS) GetEquipID() []uint32 {
	if m != nil {
		return m.EquipID
	}
	return nil
}

type EquipDecomposeToC struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EquipDecomposeToC) Reset()         { *m = EquipDecomposeToC{} }
func (m *EquipDecomposeToC) String() string { return proto.CompactTextString(m) }
func (*EquipDecomposeToC) ProtoMessage()    {}
func (*EquipDecomposeToC) Descriptor() ([]byte, []int) {
	return fileDescriptor_9214965f60b82adc, []int{1}
}

func (m *EquipDecomposeToC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipDecomposeToC.Unmarshal(m, b)
}
func (m *EquipDecomposeToC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipDecomposeToC.Marshal(b, m, deterministic)
}
func (m *EquipDecomposeToC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipDecomposeToC.Merge(m, src)
}
func (m *EquipDecomposeToC) XXX_Size() int {
	return xxx_messageInfo_EquipDecomposeToC.Size(m)
}
func (m *EquipDecomposeToC) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipDecomposeToC.DiscardUnknown(m)
}

var xxx_messageInfo_EquipDecomposeToC proto.InternalMessageInfo

func init() {
	proto.RegisterType((*EquipDecomposeToS)(nil), "message.equipDecompose_toS")
	proto.RegisterType((*EquipDecomposeToC)(nil), "message.equipDecompose_toC")
}

func init() {
	proto.RegisterFile("cs/proto/message/equipDecompose.proto", fileDescriptor_9214965f60b82adc)
}

var fileDescriptor_9214965f60b82adc = []byte{
	// 122 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4d, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x4f, 0x2d, 0x2c,
	0xcd, 0x2c, 0x70, 0x49, 0x4d, 0xce, 0xcf, 0x2d, 0xc8, 0x2f, 0x4e, 0xd5, 0x03, 0x4b, 0x0a, 0xb1,
	0x43, 0x65, 0x95, 0xf4, 0xb8, 0x84, 0x50, 0x15, 0xc4, 0x97, 0xe4, 0x07, 0x0b, 0x49, 0x70, 0xb1,
	0x83, 0x45, 0x3d, 0x5d, 0x24, 0x18, 0x15, 0x98, 0x35, 0x78, 0x83, 0x60, 0x5c, 0x25, 0x11, 0x2c,
	0xea, 0x9d, 0x9d, 0x94, 0xa2, 0x14, 0x32, 0xf3, 0x32, 0x4b, 0x32, 0x13, 0x73, 0x4a, 0x32, 0x8a,
	0x52, 0x53, 0x21, 0x2e, 0x48, 0xce, 0xcf, 0xd1, 0x4f, 0x2e, 0x86, 0xb9, 0x03, 0x10, 0x00, 0x00,
	0xff, 0xff, 0x7d, 0x4f, 0xb1, 0x37, 0x9a, 0x00, 0x00, 0x00,
}
