// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs/proto/message/secretRandomLevel.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SecretRandomLevelToS struct {
	Difficult            *int32   `protobuf:"varint,1,req,name=difficult" json:"difficult,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecretRandomLevelToS) Reset()         { *m = SecretRandomLevelToS{} }
func (m *SecretRandomLevelToS) String() string { return proto.CompactTextString(m) }
func (*SecretRandomLevelToS) ProtoMessage()    {}
func (*SecretRandomLevelToS) Descriptor() ([]byte, []int) {
	return fileDescriptor_160758492dc55852, []int{0}
}

func (m *SecretRandomLevelToS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecretRandomLevelToS.Unmarshal(m, b)
}
func (m *SecretRandomLevelToS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecretRandomLevelToS.Marshal(b, m, deterministic)
}
func (m *SecretRandomLevelToS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecretRandomLevelToS.Merge(m, src)
}
func (m *SecretRandomLevelToS) XXX_Size() int {
	return xxx_messageInfo_SecretRandomLevelToS.Size(m)
}
func (m *SecretRandomLevelToS) XXX_DiscardUnknown() {
	xxx_messageInfo_SecretRandomLevelToS.DiscardUnknown(m)
}

var xxx_messageInfo_SecretRandomLevelToS proto.InternalMessageInfo

func (m *SecretRandomLevelToS) GetDifficult() int32 {
	if m != nil && m.Difficult != nil {
		return *m.Difficult
	}
	return 0
}

type SecretRandomLevelToC struct {
	LevelID              *int32   `protobuf:"varint,1,opt,name=levelID" json:"levelID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecretRandomLevelToC) Reset()         { *m = SecretRandomLevelToC{} }
func (m *SecretRandomLevelToC) String() string { return proto.CompactTextString(m) }
func (*SecretRandomLevelToC) ProtoMessage()    {}
func (*SecretRandomLevelToC) Descriptor() ([]byte, []int) {
	return fileDescriptor_160758492dc55852, []int{1}
}

func (m *SecretRandomLevelToC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecretRandomLevelToC.Unmarshal(m, b)
}
func (m *SecretRandomLevelToC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecretRandomLevelToC.Marshal(b, m, deterministic)
}
func (m *SecretRandomLevelToC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecretRandomLevelToC.Merge(m, src)
}
func (m *SecretRandomLevelToC) XXX_Size() int {
	return xxx_messageInfo_SecretRandomLevelToC.Size(m)
}
func (m *SecretRandomLevelToC) XXX_DiscardUnknown() {
	xxx_messageInfo_SecretRandomLevelToC.DiscardUnknown(m)
}

var xxx_messageInfo_SecretRandomLevelToC proto.InternalMessageInfo

func (m *SecretRandomLevelToC) GetLevelID() int32 {
	if m != nil && m.LevelID != nil {
		return *m.LevelID
	}
	return 0
}

func init() {
	proto.RegisterType((*SecretRandomLevelToS)(nil), "message.secretRandomLevel_toS")
	proto.RegisterType((*SecretRandomLevelToC)(nil), "message.secretRandomLevel_toC")
}

func init() {
	proto.RegisterFile("cs/proto/message/secretRandomLevel.proto", fileDescriptor_160758492dc55852)
}

var fileDescriptor_160758492dc55852 = []byte{
	// 148 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x48, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2f, 0x4e, 0x4d,
	0x2e, 0x4a, 0x2d, 0x09, 0x4a, 0xcc, 0x4b, 0xc9, 0xcf, 0xf5, 0x49, 0x2d, 0x4b, 0xcd, 0xd1, 0x03,
	0xcb, 0x0b, 0xb1, 0x43, 0x15, 0x28, 0x99, 0x72, 0x89, 0x62, 0xa8, 0x89, 0x2f, 0xc9, 0x0f, 0x16,
	0x92, 0xe1, 0xe2, 0x4c, 0xc9, 0x4c, 0x4b, 0xcb, 0x4c, 0x2e, 0xcd, 0x29, 0x91, 0x60, 0x54, 0x60,
	0xd2, 0x60, 0x0d, 0x42, 0x08, 0x28, 0x19, 0x62, 0xd7, 0xe6, 0x2c, 0x24, 0xc1, 0xc5, 0x9e, 0x03,
	0xe2, 0x78, 0xba, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06, 0xc1, 0xb8, 0x4e, 0x4a, 0x51, 0x0a,
	0x99, 0x79, 0x99, 0x25, 0x99, 0x89, 0x39, 0x25, 0x19, 0x45, 0xa9, 0xa9, 0x10, 0x87, 0x26, 0xe7,
	0xe7, 0xe8, 0x27, 0x17, 0xc3, 0x9c, 0x0b, 0x08, 0x00, 0x00, 0xff, 0xff, 0x29, 0xf9, 0xe9, 0x78,
	0xc1, 0x00, 0x00, 0x00,
}
