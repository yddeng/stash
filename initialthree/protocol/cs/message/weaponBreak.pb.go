// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs/proto/message/weaponBreak.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WeaponBreakToS struct {
	WeaponID             *uint32  `protobuf:"varint,1,req,name=weaponID" json:"weaponID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WeaponBreakToS) Reset()         { *m = WeaponBreakToS{} }
func (m *WeaponBreakToS) String() string { return proto.CompactTextString(m) }
func (*WeaponBreakToS) ProtoMessage()    {}
func (*WeaponBreakToS) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8098b249e165e10, []int{0}
}

func (m *WeaponBreakToS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeaponBreakToS.Unmarshal(m, b)
}
func (m *WeaponBreakToS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeaponBreakToS.Marshal(b, m, deterministic)
}
func (m *WeaponBreakToS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeaponBreakToS.Merge(m, src)
}
func (m *WeaponBreakToS) XXX_Size() int {
	return xxx_messageInfo_WeaponBreakToS.Size(m)
}
func (m *WeaponBreakToS) XXX_DiscardUnknown() {
	xxx_messageInfo_WeaponBreakToS.DiscardUnknown(m)
}

var xxx_messageInfo_WeaponBreakToS proto.InternalMessageInfo

func (m *WeaponBreakToS) GetWeaponID() uint32 {
	if m != nil && m.WeaponID != nil {
		return *m.WeaponID
	}
	return 0
}

type WeaponBreakToC struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WeaponBreakToC) Reset()         { *m = WeaponBreakToC{} }
func (m *WeaponBreakToC) String() string { return proto.CompactTextString(m) }
func (*WeaponBreakToC) ProtoMessage()    {}
func (*WeaponBreakToC) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8098b249e165e10, []int{1}
}

func (m *WeaponBreakToC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeaponBreakToC.Unmarshal(m, b)
}
func (m *WeaponBreakToC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeaponBreakToC.Marshal(b, m, deterministic)
}
func (m *WeaponBreakToC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeaponBreakToC.Merge(m, src)
}
func (m *WeaponBreakToC) XXX_Size() int {
	return xxx_messageInfo_WeaponBreakToC.Size(m)
}
func (m *WeaponBreakToC) XXX_DiscardUnknown() {
	xxx_messageInfo_WeaponBreakToC.DiscardUnknown(m)
}

var xxx_messageInfo_WeaponBreakToC proto.InternalMessageInfo

func init() {
	proto.RegisterType((*WeaponBreakToS)(nil), "message.weaponBreak_toS")
	proto.RegisterType((*WeaponBreakToC)(nil), "message.weaponBreak_toC")
}

func init() { proto.RegisterFile("cs/proto/message/weaponBreak.proto", fileDescriptor_f8098b249e165e10) }

var fileDescriptor_f8098b249e165e10 = []byte{
	// 119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4a, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2f, 0x4f, 0x4d,
	0x2c, 0xc8, 0xcf, 0x73, 0x2a, 0x4a, 0x4d, 0xcc, 0xd6, 0x03, 0xcb, 0x08, 0xb1, 0x43, 0xa5, 0x94,
	0x74, 0xb9, 0xf8, 0x91, 0x64, 0xe3, 0x4b, 0xf2, 0x83, 0x85, 0xa4, 0xb8, 0x38, 0x20, 0x42, 0x9e,
	0x2e, 0x12, 0x8c, 0x0a, 0x4c, 0x1a, 0xbc, 0x41, 0x70, 0xbe, 0x92, 0x20, 0xba, 0x72, 0x67, 0x27,
	0xa5, 0x28, 0x85, 0xcc, 0xbc, 0xcc, 0x92, 0xcc, 0xc4, 0x9c, 0x92, 0x8c, 0xa2, 0xd4, 0x54, 0x88,
	0xd5, 0xc9, 0xf9, 0x39, 0xfa, 0xc9, 0xc5, 0x30, 0x07, 0x00, 0x02, 0x00, 0x00, 0xff, 0xff, 0x6d,
	0x0a, 0xd0, 0xe6, 0x93, 0x00, 0x00, 0x00,
}
