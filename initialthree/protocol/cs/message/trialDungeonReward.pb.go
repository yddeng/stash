// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs/proto/message/trialDungeonReward.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TrialDungeonRewardToS struct {
	DungeonIDs           []int32  `protobuf:"varint,1,rep,name=dungeonIDs" json:"dungeonIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrialDungeonRewardToS) Reset()         { *m = TrialDungeonRewardToS{} }
func (m *TrialDungeonRewardToS) String() string { return proto.CompactTextString(m) }
func (*TrialDungeonRewardToS) ProtoMessage()    {}
func (*TrialDungeonRewardToS) Descriptor() ([]byte, []int) {
	return fileDescriptor_f94c359f50a361c3, []int{0}
}

func (m *TrialDungeonRewardToS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrialDungeonRewardToS.Unmarshal(m, b)
}
func (m *TrialDungeonRewardToS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrialDungeonRewardToS.Marshal(b, m, deterministic)
}
func (m *TrialDungeonRewardToS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrialDungeonRewardToS.Merge(m, src)
}
func (m *TrialDungeonRewardToS) XXX_Size() int {
	return xxx_messageInfo_TrialDungeonRewardToS.Size(m)
}
func (m *TrialDungeonRewardToS) XXX_DiscardUnknown() {
	xxx_messageInfo_TrialDungeonRewardToS.DiscardUnknown(m)
}

var xxx_messageInfo_TrialDungeonRewardToS proto.InternalMessageInfo

func (m *TrialDungeonRewardToS) GetDungeonIDs() []int32 {
	if m != nil {
		return m.DungeonIDs
	}
	return nil
}

type TrialDungeonRewardToC struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrialDungeonRewardToC) Reset()         { *m = TrialDungeonRewardToC{} }
func (m *TrialDungeonRewardToC) String() string { return proto.CompactTextString(m) }
func (*TrialDungeonRewardToC) ProtoMessage()    {}
func (*TrialDungeonRewardToC) Descriptor() ([]byte, []int) {
	return fileDescriptor_f94c359f50a361c3, []int{1}
}

func (m *TrialDungeonRewardToC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrialDungeonRewardToC.Unmarshal(m, b)
}
func (m *TrialDungeonRewardToC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrialDungeonRewardToC.Marshal(b, m, deterministic)
}
func (m *TrialDungeonRewardToC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrialDungeonRewardToC.Merge(m, src)
}
func (m *TrialDungeonRewardToC) XXX_Size() int {
	return xxx_messageInfo_TrialDungeonRewardToC.Size(m)
}
func (m *TrialDungeonRewardToC) XXX_DiscardUnknown() {
	xxx_messageInfo_TrialDungeonRewardToC.DiscardUnknown(m)
}

var xxx_messageInfo_TrialDungeonRewardToC proto.InternalMessageInfo

func init() {
	proto.RegisterType((*TrialDungeonRewardToS)(nil), "message.trialDungeonReward_toS")
	proto.RegisterType((*TrialDungeonRewardToC)(nil), "message.trialDungeonReward_toC")
}

func init() {
	proto.RegisterFile("cs/proto/message/trialDungeonReward.proto", fileDescriptor_f94c359f50a361c3)
}

var fileDescriptor_f94c359f50a361c3 = []byte{
	// 129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x4c, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2f, 0x29, 0xca,
	0x4c, 0xcc, 0x71, 0x29, 0xcd, 0x4b, 0x4f, 0xcd, 0xcf, 0x0b, 0x4a, 0x2d, 0x4f, 0x2c, 0x4a, 0xd1,
	0x03, 0x2b, 0x10, 0x62, 0x87, 0xaa, 0x50, 0xb2, 0xe0, 0x12, 0xc3, 0x54, 0x14, 0x5f, 0x92, 0x1f,
	0x2c, 0x24, 0xc7, 0xc5, 0x95, 0x02, 0x11, 0xf4, 0x74, 0x29, 0x96, 0x60, 0x54, 0x60, 0xd6, 0x60,
	0x0d, 0x42, 0x12, 0x51, 0x92, 0xc0, 0xa1, 0xd3, 0xd9, 0x49, 0x29, 0x4a, 0x21, 0x33, 0x2f, 0xb3,
	0x24, 0x33, 0x31, 0xa7, 0x24, 0xa3, 0x28, 0x35, 0x15, 0xe2, 0xa6, 0xe4, 0xfc, 0x1c, 0xfd, 0xe4,
	0x62, 0x98, 0xcb, 0x00, 0x01, 0x00, 0x00, 0xff, 0xff, 0x61, 0xe2, 0xeb, 0xe8, 0xac, 0x00, 0x00,
	0x00,
}
