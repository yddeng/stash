// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs/proto/message/equipRefine.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EquipRefineToS struct {
	EquipID              *uint32  `protobuf:"varint,1,req,name=equipID" json:"equipID,omitempty"`
	CostEquips           []uint32 `protobuf:"varint,2,rep,name=costEquips" json:"costEquips,omitempty"`
	Position             *int32   `protobuf:"varint,3,req,name=position" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EquipRefineToS) Reset()         { *m = EquipRefineToS{} }
func (m *EquipRefineToS) String() string { return proto.CompactTextString(m) }
func (*EquipRefineToS) ProtoMessage()    {}
func (*EquipRefineToS) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ac8b122fcd416b, []int{0}
}

func (m *EquipRefineToS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipRefineToS.Unmarshal(m, b)
}
func (m *EquipRefineToS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipRefineToS.Marshal(b, m, deterministic)
}
func (m *EquipRefineToS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipRefineToS.Merge(m, src)
}
func (m *EquipRefineToS) XXX_Size() int {
	return xxx_messageInfo_EquipRefineToS.Size(m)
}
func (m *EquipRefineToS) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipRefineToS.DiscardUnknown(m)
}

var xxx_messageInfo_EquipRefineToS proto.InternalMessageInfo

func (m *EquipRefineToS) GetEquipID() uint32 {
	if m != nil && m.EquipID != nil {
		return *m.EquipID
	}
	return 0
}

func (m *EquipRefineToS) GetCostEquips() []uint32 {
	if m != nil {
		return m.CostEquips
	}
	return nil
}

func (m *EquipRefineToS) GetPosition() int32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

type EquipRefineToC struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EquipRefineToC) Reset()         { *m = EquipRefineToC{} }
func (m *EquipRefineToC) String() string { return proto.CompactTextString(m) }
func (*EquipRefineToC) ProtoMessage()    {}
func (*EquipRefineToC) Descriptor() ([]byte, []int) {
	return fileDescriptor_56ac8b122fcd416b, []int{1}
}

func (m *EquipRefineToC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipRefineToC.Unmarshal(m, b)
}
func (m *EquipRefineToC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipRefineToC.Marshal(b, m, deterministic)
}
func (m *EquipRefineToC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipRefineToC.Merge(m, src)
}
func (m *EquipRefineToC) XXX_Size() int {
	return xxx_messageInfo_EquipRefineToC.Size(m)
}
func (m *EquipRefineToC) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipRefineToC.DiscardUnknown(m)
}

var xxx_messageInfo_EquipRefineToC proto.InternalMessageInfo

func init() {
	proto.RegisterType((*EquipRefineToS)(nil), "message.equipRefine_toS")
	proto.RegisterType((*EquipRefineToC)(nil), "message.equipRefine_toC")
}

func init() { proto.RegisterFile("cs/proto/message/equipRefine.proto", fileDescriptor_56ac8b122fcd416b) }

var fileDescriptor_56ac8b122fcd416b = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4a, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x4f, 0x2d, 0x2c,
	0xcd, 0x2c, 0x08, 0x4a, 0x4d, 0xcb, 0xcc, 0x4b, 0xd5, 0x03, 0xcb, 0x08, 0xb1, 0x43, 0xa5, 0x94,
	0xd2, 0xb9, 0xf8, 0x91, 0x64, 0xe3, 0x4b, 0xf2, 0x83, 0x85, 0x24, 0xb8, 0xd8, 0xc1, 0x42, 0x9e,
	0x2e, 0x12, 0x8c, 0x0a, 0x4c, 0x1a, 0xbc, 0x41, 0x30, 0xae, 0x90, 0x1c, 0x17, 0x57, 0x72, 0x7e,
	0x71, 0x89, 0x2b, 0x88, 0x5b, 0x2c, 0xc1, 0xa4, 0xc0, 0xac, 0xc1, 0x1b, 0x84, 0x24, 0x22, 0x24,
	0xc5, 0xc5, 0x51, 0x90, 0x5f, 0x9c, 0x59, 0x92, 0x99, 0x9f, 0x27, 0xc1, 0xac, 0xc0, 0xa4, 0xc1,
	0x1a, 0x04, 0xe7, 0x2b, 0x09, 0xa2, 0x5b, 0xe4, 0xec, 0xa4, 0x14, 0xa5, 0x90, 0x99, 0x97, 0x59,
	0x92, 0x99, 0x98, 0x53, 0x92, 0x51, 0x94, 0x9a, 0x0a, 0x71, 0x74, 0x72, 0x7e, 0x8e, 0x7e, 0x72,
	0x31, 0xcc, 0xe9, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x4d, 0x35, 0xf3, 0xcd, 0x00, 0x00,
	0x00,
}
