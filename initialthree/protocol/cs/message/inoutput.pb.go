// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs/proto/message/inoutput.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InoutputToS struct {
	Id                   *int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count                *int32   `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InoutputToS) Reset()         { *m = InoutputToS{} }
func (m *InoutputToS) String() string { return proto.CompactTextString(m) }
func (*InoutputToS) ProtoMessage()    {}
func (*InoutputToS) Descriptor() ([]byte, []int) {
	return fileDescriptor_33bac7827e1a2677, []int{0}
}

func (m *InoutputToS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InoutputToS.Unmarshal(m, b)
}
func (m *InoutputToS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InoutputToS.Marshal(b, m, deterministic)
}
func (m *InoutputToS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InoutputToS.Merge(m, src)
}
func (m *InoutputToS) XXX_Size() int {
	return xxx_messageInfo_InoutputToS.Size(m)
}
func (m *InoutputToS) XXX_DiscardUnknown() {
	xxx_messageInfo_InoutputToS.DiscardUnknown(m)
}

var xxx_messageInfo_InoutputToS proto.InternalMessageInfo

func (m *InoutputToS) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *InoutputToS) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type InoutputToC struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InoutputToC) Reset()         { *m = InoutputToC{} }
func (m *InoutputToC) String() string { return proto.CompactTextString(m) }
func (*InoutputToC) ProtoMessage()    {}
func (*InoutputToC) Descriptor() ([]byte, []int) {
	return fileDescriptor_33bac7827e1a2677, []int{1}
}

func (m *InoutputToC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InoutputToC.Unmarshal(m, b)
}
func (m *InoutputToC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InoutputToC.Marshal(b, m, deterministic)
}
func (m *InoutputToC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InoutputToC.Merge(m, src)
}
func (m *InoutputToC) XXX_Size() int {
	return xxx_messageInfo_InoutputToC.Size(m)
}
func (m *InoutputToC) XXX_DiscardUnknown() {
	xxx_messageInfo_InoutputToC.DiscardUnknown(m)
}

var xxx_messageInfo_InoutputToC proto.InternalMessageInfo

func init() {
	proto.RegisterType((*InoutputToS)(nil), "message.inoutput_toS")
	proto.RegisterType((*InoutputToC)(nil), "message.inoutput_toC")
}

func init() { proto.RegisterFile("cs/proto/message/inoutput.proto", fileDescriptor_33bac7827e1a2677) }

var fileDescriptor_33bac7827e1a2677 = []byte{
	// 130 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4f, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0xcf, 0xcc, 0xcb,
	0x2f, 0x2d, 0x29, 0x28, 0x2d, 0xd1, 0x03, 0x0b, 0x0b, 0xb1, 0x43, 0xc5, 0x95, 0x4c, 0xb8, 0x78,
	0x60, 0x52, 0xf1, 0x25, 0xf9, 0xc1, 0x42, 0x7c, 0x5c, 0x4c, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0xac, 0x41, 0x4c, 0x99, 0x29, 0x42, 0x22, 0x5c, 0xac, 0xc9, 0xf9, 0xa5, 0x79, 0x25, 0x12,
	0x4c, 0x60, 0x21, 0x08, 0x47, 0x89, 0x0f, 0x45, 0x97, 0xb3, 0x93, 0x52, 0x94, 0x42, 0x66, 0x5e,
	0x66, 0x49, 0x66, 0x62, 0x4e, 0x49, 0x46, 0x51, 0x6a, 0x2a, 0xc4, 0xee, 0xe4, 0xfc, 0x1c, 0xfd,
	0xe4, 0x62, 0x98, 0x0b, 0x00, 0x01, 0x00, 0x00, 0xff, 0xff, 0xce, 0x01, 0x11, 0x99, 0x94, 0x00,
	0x00, 0x00,
}
