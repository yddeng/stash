// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs/proto/message/trialStageReward.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TrialStageRewardToS struct {
	StageID              *int32   `protobuf:"varint,1,opt,name=stageID" json:"stageID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrialStageRewardToS) Reset()         { *m = TrialStageRewardToS{} }
func (m *TrialStageRewardToS) String() string { return proto.CompactTextString(m) }
func (*TrialStageRewardToS) ProtoMessage()    {}
func (*TrialStageRewardToS) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cc065a5003163c2, []int{0}
}

func (m *TrialStageRewardToS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrialStageRewardToS.Unmarshal(m, b)
}
func (m *TrialStageRewardToS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrialStageRewardToS.Marshal(b, m, deterministic)
}
func (m *TrialStageRewardToS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrialStageRewardToS.Merge(m, src)
}
func (m *TrialStageRewardToS) XXX_Size() int {
	return xxx_messageInfo_TrialStageRewardToS.Size(m)
}
func (m *TrialStageRewardToS) XXX_DiscardUnknown() {
	xxx_messageInfo_TrialStageRewardToS.DiscardUnknown(m)
}

var xxx_messageInfo_TrialStageRewardToS proto.InternalMessageInfo

func (m *TrialStageRewardToS) GetStageID() int32 {
	if m != nil && m.StageID != nil {
		return *m.StageID
	}
	return 0
}

type TrialStageRewardToC struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrialStageRewardToC) Reset()         { *m = TrialStageRewardToC{} }
func (m *TrialStageRewardToC) String() string { return proto.CompactTextString(m) }
func (*TrialStageRewardToC) ProtoMessage()    {}
func (*TrialStageRewardToC) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cc065a5003163c2, []int{1}
}

func (m *TrialStageRewardToC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrialStageRewardToC.Unmarshal(m, b)
}
func (m *TrialStageRewardToC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrialStageRewardToC.Marshal(b, m, deterministic)
}
func (m *TrialStageRewardToC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrialStageRewardToC.Merge(m, src)
}
func (m *TrialStageRewardToC) XXX_Size() int {
	return xxx_messageInfo_TrialStageRewardToC.Size(m)
}
func (m *TrialStageRewardToC) XXX_DiscardUnknown() {
	xxx_messageInfo_TrialStageRewardToC.DiscardUnknown(m)
}

var xxx_messageInfo_TrialStageRewardToC proto.InternalMessageInfo

func init() {
	proto.RegisterType((*TrialStageRewardToS)(nil), "message.trialStageReward_toS")
	proto.RegisterType((*TrialStageRewardToC)(nil), "message.trialStageReward_toC")
}

func init() {
	proto.RegisterFile("cs/proto/message/trialStageReward.proto", fileDescriptor_9cc065a5003163c2)
}

var fileDescriptor_9cc065a5003163c2 = []byte{
	// 125 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4f, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2f, 0x29, 0xca,
	0x4c, 0xcc, 0x09, 0x2e, 0x49, 0x4c, 0x4f, 0x0d, 0x4a, 0x2d, 0x4f, 0x2c, 0x4a, 0xd1, 0x03, 0x4b,
	0x0b, 0xb1, 0x43, 0xe5, 0x95, 0x0c, 0xb8, 0x44, 0xd0, 0x95, 0xc4, 0x97, 0xe4, 0x07, 0x0b, 0x49,
	0x70, 0xb1, 0x17, 0x83, 0x84, 0x3c, 0x5d, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0x60, 0x5c,
	0x25, 0x31, 0xac, 0x3a, 0x9c, 0x9d, 0x94, 0xa2, 0x14, 0x32, 0xf3, 0x32, 0x4b, 0x32, 0x13, 0x73,
	0x4a, 0x32, 0x8a, 0x52, 0x53, 0x21, 0xee, 0x48, 0xce, 0xcf, 0xd1, 0x4f, 0x2e, 0x86, 0xb9, 0x06,
	0x10, 0x00, 0x00, 0xff, 0xff, 0xa6, 0xa2, 0xc5, 0xc0, 0xa0, 0x00, 0x00, 0x00,
}
