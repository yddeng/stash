// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs/proto/message/bigSecretWeakness.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BigSecretWeaknessToS struct {
	Level                *int32   `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BigSecretWeaknessToS) Reset()         { *m = BigSecretWeaknessToS{} }
func (m *BigSecretWeaknessToS) String() string { return proto.CompactTextString(m) }
func (*BigSecretWeaknessToS) ProtoMessage()    {}
func (*BigSecretWeaknessToS) Descriptor() ([]byte, []int) {
	return fileDescriptor_c99eb5a3bc3cc2f6, []int{0}
}

func (m *BigSecretWeaknessToS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BigSecretWeaknessToS.Unmarshal(m, b)
}
func (m *BigSecretWeaknessToS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BigSecretWeaknessToS.Marshal(b, m, deterministic)
}
func (m *BigSecretWeaknessToS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BigSecretWeaknessToS.Merge(m, src)
}
func (m *BigSecretWeaknessToS) XXX_Size() int {
	return xxx_messageInfo_BigSecretWeaknessToS.Size(m)
}
func (m *BigSecretWeaknessToS) XXX_DiscardUnknown() {
	xxx_messageInfo_BigSecretWeaknessToS.DiscardUnknown(m)
}

var xxx_messageInfo_BigSecretWeaknessToS proto.InternalMessageInfo

func (m *BigSecretWeaknessToS) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

type BigSecretWeaknessToC struct {
	Weakness             *BigSecretWeakness `protobuf:"bytes,1,opt,name=weakness" json:"weakness,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BigSecretWeaknessToC) Reset()         { *m = BigSecretWeaknessToC{} }
func (m *BigSecretWeaknessToC) String() string { return proto.CompactTextString(m) }
func (*BigSecretWeaknessToC) ProtoMessage()    {}
func (*BigSecretWeaknessToC) Descriptor() ([]byte, []int) {
	return fileDescriptor_c99eb5a3bc3cc2f6, []int{1}
}

func (m *BigSecretWeaknessToC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BigSecretWeaknessToC.Unmarshal(m, b)
}
func (m *BigSecretWeaknessToC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BigSecretWeaknessToC.Marshal(b, m, deterministic)
}
func (m *BigSecretWeaknessToC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BigSecretWeaknessToC.Merge(m, src)
}
func (m *BigSecretWeaknessToC) XXX_Size() int {
	return xxx_messageInfo_BigSecretWeaknessToC.Size(m)
}
func (m *BigSecretWeaknessToC) XXX_DiscardUnknown() {
	xxx_messageInfo_BigSecretWeaknessToC.DiscardUnknown(m)
}

var xxx_messageInfo_BigSecretWeaknessToC proto.InternalMessageInfo

func (m *BigSecretWeaknessToC) GetWeakness() *BigSecretWeakness {
	if m != nil {
		return m.Weakness
	}
	return nil
}

func init() {
	proto.RegisterType((*BigSecretWeaknessToS)(nil), "message.bigSecretWeakness_toS")
	proto.RegisterType((*BigSecretWeaknessToC)(nil), "message.bigSecretWeakness_toC")
}

func init() {
	proto.RegisterFile("cs/proto/message/bigSecretWeakness.proto", fileDescriptor_c99eb5a3bc3cc2f6)
}

var fileDescriptor_c99eb5a3bc3cc2f6 = []byte{
	// 158 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x48, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x4f, 0xca, 0x4c,
	0x0f, 0x4e, 0x4d, 0x2e, 0x4a, 0x2d, 0x09, 0x4f, 0x4d, 0xcc, 0xce, 0x4b, 0x2d, 0x2e, 0xd6, 0x03,
	0xcb, 0x0b, 0xb1, 0x43, 0x15, 0x48, 0xa9, 0xe0, 0xd6, 0x12, 0x5c, 0x99, 0x97, 0x0c, 0x51, 0xae,
	0xa4, 0xcb, 0x25, 0x8a, 0x61, 0x52, 0x7c, 0x49, 0x7e, 0xb0, 0x90, 0x08, 0x17, 0x6b, 0x4e, 0x6a,
	0x59, 0x6a, 0x8e, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x6b, 0x10, 0x84, 0xa3, 0xe4, 0x8f, 0x5d, 0xb9,
	0xb3, 0x90, 0x19, 0x17, 0x47, 0x39, 0x94, 0x0f, 0xd6, 0xc1, 0x6d, 0x24, 0xa5, 0x07, 0xb5, 0x57,
	0x0f, 0x43, 0x47, 0x10, 0x5c, 0xad, 0x93, 0x52, 0x94, 0x42, 0x66, 0x5e, 0x66, 0x49, 0x66, 0x62,
	0x4e, 0x49, 0x46, 0x51, 0x6a, 0x2a, 0xc4, 0xc5, 0xc9, 0xf9, 0x39, 0xfa, 0xc9, 0xc5, 0x30, 0x77,
	0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x82, 0x4c, 0x96, 0x5b, 0xfd, 0x00, 0x00, 0x00,
}
