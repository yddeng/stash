// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ss/proto/rpc/errcode.proto

package rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrCode int32

const (
	ErrCode_OK                      ErrCode = 0
	ErrCode_Error                   ErrCode = 1
	ErrCode_Retry                   ErrCode = 2
	ErrCode_GateLogin_Redirect      ErrCode = 10
	ErrCode_Forward_UserNotFound    ErrCode = 20
	ErrCode_Forward_InvalidGateUser ErrCode = 21
	ErrCode_Forward_InvalidSeqNo    ErrCode = 22
)

var ErrCode_name = map[int32]string{
	0:  "OK",
	1:  "Error",
	2:  "Retry",
	10: "GateLogin_Redirect",
	20: "Forward_UserNotFound",
	21: "Forward_InvalidGateUser",
	22: "Forward_InvalidSeqNo",
}

var ErrCode_value = map[string]int32{
	"OK":                      0,
	"Error":                   1,
	"Retry":                   2,
	"GateLogin_Redirect":      10,
	"Forward_UserNotFound":    20,
	"Forward_InvalidGateUser": 21,
	"Forward_InvalidSeqNo":    22,
}

func (x ErrCode) Enum() *ErrCode {
	p := new(ErrCode)
	*p = x
	return p
}

func (x ErrCode) String() string {
	return proto.EnumName(ErrCode_name, int32(x))
}

func (x *ErrCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ErrCode_value, data, "ErrCode")
	if err != nil {
		return err
	}
	*x = ErrCode(value)
	return nil
}

func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f5e33aab7bfe2c06, []int{0}
}

func init() {
	proto.RegisterEnum("rpc.ErrCode", ErrCode_name, ErrCode_value)
}

func init() { proto.RegisterFile("ss/proto/rpc/errcode.proto", fileDescriptor_f5e33aab7bfe2c06) }

var fileDescriptor_f5e33aab7bfe2c06 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xcf, 0x4a, 0xc6, 0x30,
	0x10, 0xc4, 0x6d, 0x45, 0xc5, 0x3d, 0x85, 0x50, 0xab, 0xa8, 0xf8, 0x00, 0x1e, 0xcc, 0x3b, 0x28,
	0xad, 0x88, 0x52, 0xa1, 0xe2, 0xc5, 0x4b, 0x09, 0xc9, 0xa2, 0x81, 0x92, 0xad, 0x93, 0xa8, 0xf8,
	0x16, 0x3e, 0xb2, 0xe4, 0xfb, 0x03, 0xdf, 0x6d, 0xd9, 0xdf, 0xcc, 0x30, 0x43, 0xe7, 0x29, 0x99,
	0x05, 0x92, 0xc5, 0x60, 0x71, 0x86, 0x01, 0x27, 0x9e, 0x6f, 0x56, 0x1f, 0xbd, 0x8f, 0xc5, 0x5d,
	0xff, 0x55, 0x74, 0xd4, 0x01, 0x77, 0xe2, 0x59, 0x1f, 0x52, 0xfd, 0xfc, 0xa8, 0xf6, 0xf4, 0x31,
	0x1d, 0x74, 0x80, 0x40, 0x55, 0xe5, 0x1c, 0x39, 0xe3, 0x57, 0xd5, 0xba, 0x25, 0x7d, 0x6f, 0x33,
	0x3f, 0xc9, 0x7b, 0x88, 0xd3, 0xc8, 0x3e, 0x80, 0x5d, 0x56, 0xa4, 0xcf, 0xa8, 0xe9, 0x05, 0x3f,
	0x16, 0x7e, 0x7a, 0x4d, 0x8c, 0x41, 0x72, 0x2f, 0x5f, 0xd1, 0xab, 0x46, 0x5f, 0xd0, 0xe9, 0x96,
	0x3c, 0xc4, 0x6f, 0x3b, 0x07, 0x5f, 0x02, 0x8a, 0x48, 0x9d, 0xec, 0xda, 0x36, 0xf0, 0x85, 0x3f,
	0x07, 0x51, 0xed, 0xed, 0xd5, 0xdb, 0x65, 0x88, 0x21, 0x07, 0x3b, 0xe7, 0x0f, 0x30, 0xaf, 0xfb,
	0x3b, 0x99, 0x4d, 0x4a, 0x65, 0xc5, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x46, 0x59, 0xad, 0x62,
	0xd4, 0x00, 0x00, 0x00,
}
