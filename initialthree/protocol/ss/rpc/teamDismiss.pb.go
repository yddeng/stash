// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ss/proto/rpc/teamDismiss.proto

package rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	message "initialthree/protocol/cs/message"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TeamDismissReq struct {
	PlayerID             *uint64  `protobuf:"varint,1,opt,name=playerID" json:"playerID,omitempty"`
	TeamID               *uint32  `protobuf:"varint,2,opt,name=teamID" json:"teamID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamDismissReq) Reset()         { *m = TeamDismissReq{} }
func (m *TeamDismissReq) String() string { return proto.CompactTextString(m) }
func (*TeamDismissReq) ProtoMessage()    {}
func (*TeamDismissReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe1168f8b5119b71, []int{0}
}

func (m *TeamDismissReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamDismissReq.Unmarshal(m, b)
}
func (m *TeamDismissReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamDismissReq.Marshal(b, m, deterministic)
}
func (m *TeamDismissReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamDismissReq.Merge(m, src)
}
func (m *TeamDismissReq) XXX_Size() int {
	return xxx_messageInfo_TeamDismissReq.Size(m)
}
func (m *TeamDismissReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamDismissReq.DiscardUnknown(m)
}

var xxx_messageInfo_TeamDismissReq proto.InternalMessageInfo

func (m *TeamDismissReq) GetPlayerID() uint64 {
	if m != nil && m.PlayerID != nil {
		return *m.PlayerID
	}
	return 0
}

func (m *TeamDismissReq) GetTeamID() uint32 {
	if m != nil && m.TeamID != nil {
		return *m.TeamID
	}
	return 0
}

type TeamDismissResp struct {
	ErrCode              *message.ErrCode `protobuf:"varint,1,opt,name=errCode,enum=message.ErrCode" json:"errCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TeamDismissResp) Reset()         { *m = TeamDismissResp{} }
func (m *TeamDismissResp) String() string { return proto.CompactTextString(m) }
func (*TeamDismissResp) ProtoMessage()    {}
func (*TeamDismissResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe1168f8b5119b71, []int{1}
}

func (m *TeamDismissResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamDismissResp.Unmarshal(m, b)
}
func (m *TeamDismissResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamDismissResp.Marshal(b, m, deterministic)
}
func (m *TeamDismissResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamDismissResp.Merge(m, src)
}
func (m *TeamDismissResp) XXX_Size() int {
	return xxx_messageInfo_TeamDismissResp.Size(m)
}
func (m *TeamDismissResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamDismissResp.DiscardUnknown(m)
}

var xxx_messageInfo_TeamDismissResp proto.InternalMessageInfo

func (m *TeamDismissResp) GetErrCode() message.ErrCode {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return message.ErrCode_OK
}

func init() {
	proto.RegisterType((*TeamDismissReq)(nil), "rpc.teamDismiss_req")
	proto.RegisterType((*TeamDismissResp)(nil), "rpc.teamDismiss_resp")
}

func init() { proto.RegisterFile("ss/proto/rpc/teamDismiss.proto", fileDescriptor_fe1168f8b5119b71) }

var fileDescriptor_fe1168f8b5119b71 = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x3d, 0xcb, 0xc2, 0x30,
	0x14, 0x85, 0xe9, 0xfb, 0x8a, 0x4a, 0x40, 0x2d, 0x19, 0xa4, 0x14, 0xa9, 0xa5, 0x53, 0x71, 0x68,
	0xc0, 0x1f, 0xe0, 0xa0, 0xed, 0xd0, 0xb5, 0xa3, 0x8b, 0x84, 0x78, 0xd1, 0x40, 0x6b, 0xe2, 0xbd,
	0x59, 0xfc, 0xf7, 0xd2, 0x2f, 0xd1, 0xf1, 0x1c, 0x9e, 0x7b, 0x78, 0x2e, 0x8b, 0x88, 0x84, 0x45,
	0xe3, 0x8c, 0x40, 0xab, 0x84, 0x03, 0xd9, 0xe4, 0x9a, 0x1a, 0x4d, 0x94, 0x75, 0x2d, 0xff, 0x47,
	0xab, 0xc2, 0xad, 0x1a, 0xa1, 0x06, 0x88, 0xe4, 0x0d, 0x04, 0x20, 0x02, 0xa2, 0xc1, 0x9e, 0x4a,
	0x0a, 0xb6, 0xfa, 0x3a, 0xbd, 0x20, 0x3c, 0x79, 0xc8, 0xe6, 0xb6, 0x96, 0x2f, 0xc0, 0x32, 0x0f,
	0xbc, 0xd8, 0x4b, 0x27, 0xd5, 0x27, 0xf3, 0x35, 0x9b, 0xb6, 0x78, 0x99, 0x07, 0x7f, 0xb1, 0x97,
	0x2e, 0xaa, 0x21, 0x25, 0x07, 0xe6, 0xff, 0xce, 0x90, 0xe5, 0x3b, 0x36, 0x03, 0xc4, 0x93, 0xb9,
	0x42, 0x37, 0xb3, 0xdc, 0xfb, 0xd9, 0x20, 0x91, 0x15, 0x7d, 0x5f, 0x8d, 0xc0, 0x31, 0x3a, 0x6f,
	0xf4, 0x43, 0x3b, 0x2d, 0x6b, 0x77, 0x47, 0x80, 0xde, 0x59, 0x99, 0x5a, 0x10, 0xb5, 0xef, 0xbd,
	0x03, 0x00, 0x00, 0xff, 0xff, 0x0a, 0x12, 0xe3, 0xcd, 0xed, 0x00, 0x00, 0x00,
}
