// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ss/proto/ssmessage/relay.proto

package ssmessage

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Target struct {
	UserID               *string  `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	RoleID               *uint64  `protobuf:"varint,2,opt,name=roleID" json:"roleID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Target) Reset()         { *m = Target{} }
func (m *Target) String() string { return proto.CompactTextString(m) }
func (*Target) ProtoMessage()    {}
func (*Target) Descriptor() ([]byte, []int) {
	return fileDescriptor_89cc9e4911a500ca, []int{0}
}

func (m *Target) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Target.Unmarshal(m, b)
}
func (m *Target) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Target.Marshal(b, m, deterministic)
}
func (m *Target) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Target.Merge(m, src)
}
func (m *Target) XXX_Size() int {
	return xxx_messageInfo_Target.Size(m)
}
func (m *Target) XXX_DiscardUnknown() {
	xxx_messageInfo_Target.DiscardUnknown(m)
}

var xxx_messageInfo_Target proto.InternalMessageInfo

func (m *Target) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *Target) GetRoleID() uint64 {
	if m != nil && m.RoleID != nil {
		return *m.RoleID
	}
	return 0
}

type Relay struct {
	Targets              []*Target `protobuf:"bytes,1,rep,name=targets" json:"targets,omitempty"`
	MsgType              *string   `protobuf:"bytes,2,opt,name=msgType" json:"msgType,omitempty"`
	Msg                  []byte    `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Relay) Reset()         { *m = Relay{} }
func (m *Relay) String() string { return proto.CompactTextString(m) }
func (*Relay) ProtoMessage()    {}
func (*Relay) Descriptor() ([]byte, []int) {
	return fileDescriptor_89cc9e4911a500ca, []int{1}
}

func (m *Relay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Relay.Unmarshal(m, b)
}
func (m *Relay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Relay.Marshal(b, m, deterministic)
}
func (m *Relay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Relay.Merge(m, src)
}
func (m *Relay) XXX_Size() int {
	return xxx_messageInfo_Relay.Size(m)
}
func (m *Relay) XXX_DiscardUnknown() {
	xxx_messageInfo_Relay.DiscardUnknown(m)
}

var xxx_messageInfo_Relay proto.InternalMessageInfo

func (m *Relay) GetTargets() []*Target {
	if m != nil {
		return m.Targets
	}
	return nil
}

func (m *Relay) GetMsgType() string {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return ""
}

func (m *Relay) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

func init() {
	proto.RegisterType((*Target)(nil), "ssmessage.target")
	proto.RegisterType((*Relay)(nil), "ssmessage.relay")
}

func init() { proto.RegisterFile("ss/proto/ssmessage/relay.proto", fileDescriptor_89cc9e4911a500ca) }

var fileDescriptor_89cc9e4911a500ca = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0x3f, 0x8b, 0xc2, 0x30,
	0x18, 0x87, 0xc9, 0xf5, 0xae, 0xa5, 0xb9, 0x1b, 0xce, 0x0c, 0x92, 0x49, 0x42, 0x71, 0x08, 0x08,
	0x0d, 0x38, 0x39, 0x4b, 0x97, 0xae, 0xc1, 0xc9, 0xc9, 0x20, 0x2f, 0xb1, 0x90, 0x9a, 0x92, 0x37,
	0x0e, 0xfd, 0xf6, 0xd2, 0xbf, 0x6e, 0x79, 0x9e, 0xbc, 0x3c, 0xf0, 0xa3, 0x3b, 0x44, 0xd5, 0x05,
	0x1f, 0xbd, 0x42, 0x6c, 0x01, 0xd1, 0x58, 0x50, 0x01, 0x9c, 0xe9, 0xcb, 0xd1, 0xb2, 0x7c, 0xd5,
	0xc5, 0x89, 0xa6, 0xd1, 0x04, 0x0b, 0x91, 0x6d, 0x69, 0xfa, 0x42, 0x08, 0x75, 0xc5, 0x89, 0x20,
	0x32, 0xd7, 0x33, 0x0d, 0x3e, 0x78, 0x07, 0x75, 0xc5, 0xbf, 0x04, 0x91, 0xdf, 0x7a, 0xa6, 0xe2,
	0x46, 0x7f, 0xc6, 0x26, 0x3b, 0xd0, 0x6c, 0x4a, 0x20, 0x27, 0x22, 0x91, 0xbf, 0xc7, 0x4d, 0xb9,
	0xf6, 0xcb, 0xe9, 0x47, 0x2f, 0x17, 0x8c, 0xd3, 0xac, 0x45, 0x7b, 0xe9, 0x3b, 0x18, 0x73, 0xb9,
	0x5e, 0x90, 0xfd, 0xd3, 0xa4, 0x45, 0xcb, 0x13, 0x41, 0xe4, 0x9f, 0x1e, 0x9e, 0xe7, 0xfd, 0xb5,
	0x68, 0x9e, 0x4d, 0x6c, 0x8c, 0x8b, 0x8f, 0x00, 0x30, 0x4d, 0xba, 0x7b, 0xa7, 0x10, 0x3f, 0xc3,
	0xde, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7d, 0xf9, 0xd9, 0x76, 0xed, 0x00, 0x00, 0x00,
}
