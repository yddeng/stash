// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ss/proto/ssmessage/mapToWorld.proto

package ssmessage

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MapToWorld struct {
	MapAddr              *string  `protobuf:"bytes,1,req,name=mapAddr" json:"mapAddr,omitempty"`
	Scenes               []*Scene `protobuf:"bytes,2,rep,name=scenes" json:"scenes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MapToWorld) Reset()         { *m = MapToWorld{} }
func (m *MapToWorld) String() string { return proto.CompactTextString(m) }
func (*MapToWorld) ProtoMessage()    {}
func (*MapToWorld) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae1670de59ec9b5e, []int{0}
}

func (m *MapToWorld) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapToWorld.Unmarshal(m, b)
}
func (m *MapToWorld) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapToWorld.Marshal(b, m, deterministic)
}
func (m *MapToWorld) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapToWorld.Merge(m, src)
}
func (m *MapToWorld) XXX_Size() int {
	return xxx_messageInfo_MapToWorld.Size(m)
}
func (m *MapToWorld) XXX_DiscardUnknown() {
	xxx_messageInfo_MapToWorld.DiscardUnknown(m)
}

var xxx_messageInfo_MapToWorld proto.InternalMessageInfo

func (m *MapToWorld) GetMapAddr() string {
	if m != nil && m.MapAddr != nil {
		return *m.MapAddr
	}
	return ""
}

func (m *MapToWorld) GetScenes() []*Scene {
	if m != nil {
		return m.Scenes
	}
	return nil
}

type Scene struct {
	SceneID              *int32   `protobuf:"varint,1,opt,name=sceneID" json:"sceneID,omitempty"`
	AOICurr              *int32   `protobuf:"varint,2,opt,name=AOICurr" json:"AOICurr,omitempty"`
	AOITotal             *int32   `protobuf:"varint,3,opt,name=AOITotal" json:"AOITotal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Scene) Reset()         { *m = Scene{} }
func (m *Scene) String() string { return proto.CompactTextString(m) }
func (*Scene) ProtoMessage()    {}
func (*Scene) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae1670de59ec9b5e, []int{1}
}

func (m *Scene) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Scene.Unmarshal(m, b)
}
func (m *Scene) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Scene.Marshal(b, m, deterministic)
}
func (m *Scene) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scene.Merge(m, src)
}
func (m *Scene) XXX_Size() int {
	return xxx_messageInfo_Scene.Size(m)
}
func (m *Scene) XXX_DiscardUnknown() {
	xxx_messageInfo_Scene.DiscardUnknown(m)
}

var xxx_messageInfo_Scene proto.InternalMessageInfo

func (m *Scene) GetSceneID() int32 {
	if m != nil && m.SceneID != nil {
		return *m.SceneID
	}
	return 0
}

func (m *Scene) GetAOICurr() int32 {
	if m != nil && m.AOICurr != nil {
		return *m.AOICurr
	}
	return 0
}

func (m *Scene) GetAOITotal() int32 {
	if m != nil && m.AOITotal != nil {
		return *m.AOITotal
	}
	return 0
}

func init() {
	proto.RegisterType((*MapToWorld)(nil), "ssmessage.mapToWorld")
	proto.RegisterType((*Scene)(nil), "ssmessage.scene")
}

func init() {
	proto.RegisterFile("ss/proto/ssmessage/mapToWorld.proto", fileDescriptor_ae1670de59ec9b5e)
}

var fileDescriptor_ae1670de59ec9b5e = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0xcf, 0xbf, 0xaa, 0x83, 0x30,
	0x14, 0xc7, 0x71, 0x54, 0xbc, 0xf7, 0x7a, 0xee, 0x52, 0x32, 0x85, 0x4e, 0x62, 0x3b, 0x64, 0x32,
	0xd0, 0x37, 0xb0, 0xed, 0xe2, 0x64, 0x11, 0x41, 0xe8, 0x16, 0x34, 0xb4, 0x42, 0x34, 0x92, 0x93,
	0xbe, 0x7f, 0x31, 0xfe, 0xdb, 0xce, 0x97, 0x0f, 0x1c, 0xf8, 0xc1, 0x09, 0x91, 0x8f, 0x46, 0x5b,
	0xcd, 0x11, 0x7b, 0x89, 0x28, 0x5e, 0x92, 0xf7, 0x62, 0xac, 0x74, 0xad, 0x8d, 0x6a, 0x53, 0x47,
	0x24, 0xda, 0x2c, 0x79, 0x00, 0xec, 0x4c, 0x28, 0xfc, 0xf6, 0x62, 0xcc, 0xda, 0xd6, 0x50, 0x2f,
	0xf6, 0x59, 0x54, 0xae, 0x49, 0x18, 0xfc, 0x60, 0x23, 0x07, 0x89, 0xd4, 0x8f, 0x03, 0xf6, 0x7f,
	0x39, 0xa4, 0xdb, 0x8f, 0xd4, 0x41, 0xb9, 0x78, 0x52, 0x43, 0xe8, 0xae, 0xe9, 0x99, 0x3b, 0xf2,
	0x3b, 0xf5, 0x62, 0x8f, 0x85, 0xe5, 0x9a, 0x93, 0x64, 0x45, 0x7e, 0xfb, 0x18, 0x43, 0xfd, 0x59,
	0x96, 0x24, 0x47, 0xf8, 0xcb, 0x8a, 0xbc, 0xd2, 0x56, 0x28, 0x1a, 0x38, 0xda, 0xfa, 0x7a, 0x7e,
	0x26, 0xdd, 0xd0, 0xd9, 0x4e, 0x28, 0xfb, 0x36, 0x52, 0xce, 0x33, 0x1b, 0xad, 0x38, 0xe2, 0x3e,
	0xf6, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x1f, 0x1e, 0x78, 0x01, 0x01, 0x00, 0x00,
}
