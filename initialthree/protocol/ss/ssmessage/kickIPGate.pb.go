// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ss/proto/ssmessage/kickIPGate.proto

package ssmessage

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type KickIPGate struct {
	RegexpIPs            []string `protobuf:"bytes,1,rep,name=regexpIPs" json:"regexpIPs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KickIPGate) Reset()         { *m = KickIPGate{} }
func (m *KickIPGate) String() string { return proto.CompactTextString(m) }
func (*KickIPGate) ProtoMessage()    {}
func (*KickIPGate) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cba3d8c1bdf14bd, []int{0}
}

func (m *KickIPGate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KickIPGate.Unmarshal(m, b)
}
func (m *KickIPGate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KickIPGate.Marshal(b, m, deterministic)
}
func (m *KickIPGate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KickIPGate.Merge(m, src)
}
func (m *KickIPGate) XXX_Size() int {
	return xxx_messageInfo_KickIPGate.Size(m)
}
func (m *KickIPGate) XXX_DiscardUnknown() {
	xxx_messageInfo_KickIPGate.DiscardUnknown(m)
}

var xxx_messageInfo_KickIPGate proto.InternalMessageInfo

func (m *KickIPGate) GetRegexpIPs() []string {
	if m != nil {
		return m.RegexpIPs
	}
	return nil
}

func init() {
	proto.RegisterType((*KickIPGate)(nil), "ssmessage.kickIPGate")
}

func init() {
	proto.RegisterFile("ss/proto/ssmessage/kickIPGate.proto", fileDescriptor_6cba3d8c1bdf14bd)
}

var fileDescriptor_6cba3d8c1bdf14bd = []byte{
	// 116 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2e, 0x2e, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2f, 0x2e, 0xce, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0xcf,
	0xce, 0x4c, 0xce, 0xf6, 0x0c, 0x70, 0x4f, 0x2c, 0x49, 0xd5, 0x03, 0x4b, 0x09, 0x71, 0xc2, 0xe5,
	0x94, 0xb4, 0xb8, 0xb8, 0x10, 0xd2, 0x42, 0x32, 0x5c, 0x9c, 0x45, 0xa9, 0xe9, 0xa9, 0x15, 0x05,
	0x9e, 0x01, 0xc5, 0x12, 0x8c, 0x0a, 0xcc, 0x1a, 0x9c, 0x41, 0x08, 0x01, 0x27, 0x95, 0x28, 0xa5,
	0xcc, 0xbc, 0xcc, 0x92, 0xcc, 0xc4, 0x9c, 0x92, 0x8c, 0xa2, 0xd4, 0x54, 0x88, 0x3d, 0xc9, 0xf9,
	0x39, 0xfa, 0xc5, 0xc5, 0x08, 0xdb, 0x00, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0f, 0xd6, 0x90, 0x30,
	0x82, 0x00, 0x00, 0x00,
}
